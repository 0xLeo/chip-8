#################################################################################
# A simplified ini file format is used for my Chip-8 project.
# Boolean type is not supported, so if you want something to be false set it to 0,
# else to 1.
# If a setting is left blank, it will be set to its default value.
# Explanation:
#
# 	overclock (0/1):			If 1, the host runs the ROM as fast as possible.
#								Sound is also disabled. If 0, the rom is run at
#								`instructions_per_sec` instructions per second.
#	instructions_per_sec (int):	How many instructions (2 byte codes) to run per sec.
#								If your game is too fast, you can lower it.
#	stop_after_iter (int):		How many fetch-decode-execute iterations to run.
#								If <0, run forever. This setting is used by unit tests.
#	mute (0/1):					If 0, don't play Chip-8's beeping sound.
#	freq (int):					Beeping frequency
#################################################################################


[Default]
b_overclock = false
i_instructions_per_sec = 70
i_stop_after_iter = -1
b_mute = true 
i_freq = 700
s_key_0 = 1
s_key_1 = 2
s_key_2 = 3
s_key_3 = 4
s_key_4 = q
s_key_5 = w
s_key_6 = e
s_key_7 = r
s_key_8 = a
s_key_9 = s
s_key_a = d
s_key_b = f
s_key_c = z
s_key_d = x
s_key_e = c
s_key_f = v
i_screen_height = 320
i_screen_width = 640 


# Overwrite default values - if rhs is empty, we revert to default
[Settings]
b_overclock = 
i_instructions_per_sec = 
i_stop_after_iter = 
b_mute = 
i_freq = 
s_key_0 = 
s_key_1 = 
s_key_2 = 
s_key_3 = 
s_key_4 = 
s_key_5 = 
s_key_6 = 
s_key_7 = 
s_key_8 = 
s_key_9 = 
s_key_a = 
s_key_b = 
s_key_c = 
s_key_d = 
s_key_e = 
s_key_f = 

